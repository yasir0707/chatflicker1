{"version":3,"file":"ngx-bootstrap-buttons.js","sources":["ngx-bootstrap/buttons/button-checkbox.directive.ts","ngx-bootstrap/buttons/button-radio.directive.ts","ngx-bootstrap/buttons/button-radio-group.directive.ts","ngx-bootstrap/buttons/buttons.module.ts"],"names":["RADIO_CONTROL_VALUE_ACCESSOR"],"mappings":"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","sourcesContent":["// tslint:disable:no-use-before-declare\nimport {\n  Directive,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnInit,\n  Provider\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n// TODO: config: activeClass - Class to apply to the checked buttons\nexport const CHECKBOX_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => ButtonCheckboxDirective),\n  multi: true\n};\n\n/**\n * Add checkbox functionality to any element\n */\n@Directive({\n  selector: '[btnCheckbox]',\n  providers: [CHECKBOX_CONTROL_VALUE_ACCESSOR]\n})\nexport class ButtonCheckboxDirective implements ControlValueAccessor, OnInit {\n  /** Truthy value, will be set to ngModel */\n  @Input() btnCheckboxTrue = true;\n  /** Falsy value, will be set to ngModel */\n  @Input() btnCheckboxFalse = false;\n\n  @HostBinding('class.active')\n  @HostBinding('attr.aria-pressed')\n  state = false;\n\n  protected value: boolean | string;\n  protected isDisabled: boolean;\n\n  protected onChange = Function.prototype;\n  protected onTouched = Function.prototype;\n\n  // view -> model\n  @HostListener('click')\n  onClick(): void {\n    if (this.isDisabled) {\n      return;\n    }\n\n    this.toggle(!this.state);\n    this.onChange(this.value);\n  }\n\n  ngOnInit(): void {\n    this.toggle(this.trueValue === this.value);\n  }\n\n  protected get trueValue(): boolean {\n    return typeof this.btnCheckboxTrue !== 'undefined'\n      ? this.btnCheckboxTrue\n      : true;\n  }\n\n  protected get falseValue(): boolean {\n    return typeof this.btnCheckboxFalse !== 'undefined'\n      ? this.btnCheckboxFalse\n      : false;\n  }\n\n  toggle(state: boolean): void {\n    this.state = state;\n    this.value = this.state ? this.trueValue : this.falseValue;\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  writeValue(value: boolean | string | null): void {\n    this.state = this.trueValue === value;\n    this.value = value ? this.trueValue : this.falseValue;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  registerOnChange(fn: () => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  OnInit,\n  Optional,\n  Provider,\n  Renderer2\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ButtonRadioGroupDirective } from './button-radio-group.directive';\n\nexport const RADIO_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => ButtonRadioDirective),\n  multi: true\n};\n\n/**\n * Create radio buttons or groups of buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\n@Directive({\n  selector: '[btnRadio]',\n  providers: [RADIO_CONTROL_VALUE_ACCESSOR]\n})\nexport class ButtonRadioDirective implements ControlValueAccessor, OnInit {\n  onChange = Function.prototype;\n  onTouched = Function.prototype;\n\n  /** Radio button value, will be set to `ngModel` */\n  @Input() btnRadio: string;\n  /** If `true` — radio button can be unchecked */\n  @Input() uncheckable: boolean;\n  /** Current value of radio component or group */\n  @Input()\n  get value() {\n    return this.group ? this.group.value : this._value;\n  }\n\n  set value(value: null | string) {\n    if (this.group) {\n      this.group.value = value;\n\n      return;\n    }\n    this._value = value;\n  }\n  /** If `true` — radio button is disabled */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  set disabled(disabled: boolean) {\n    this.setDisabledState(disabled);\n  }\n\n  @HostBinding('attr.aria-disabled')\n  get controlOrGroupDisabled() {\n    return this.disabled || (this.group && this.group.disabled) ? true : undefined;\n  }\n\n  @HostBinding('class.disabled')\n  get hasDisabledClass() {\n    // Although the radio is disabled the active radio should still stand out.\n    // The disabled class will prevent this so don't add it on the active radio\n    return this.controlOrGroupDisabled && !this.isActive;\n  }\n\n  @HostBinding('class.active')\n  @HostBinding('attr.aria-checked')\n  get isActive(): boolean {\n    return this.btnRadio === this.value;\n  }\n\n  @HostBinding('attr.role') readonly role: string = 'radio';\n\n  @HostBinding('attr.tabindex')\n  get tabindex(): undefined | number {\n    if (this.controlOrGroupDisabled) {\n      // Disabled radio buttons should not receive focus\n      return undefined;\n    } else if (this.isActive || this.group == null) {\n      return 0;\n    } else {\n      return -1;\n    }\n  }\n\n  get hasFocus(): boolean {\n    return this._hasFocus;\n  }\n\n  private _value: null | string;\n  private _disabled: boolean;\n  private _hasFocus = false;\n\n  constructor(\n    private el: ElementRef,\n    private cdr: ChangeDetectorRef,\n    private renderer: Renderer2,\n    @Optional()\n    @Inject(forwardRef(() => ButtonRadioGroupDirective))\n    private group: ButtonRadioGroupDirective\n  ) {}\n\n  @HostListener('click')\n  toggleIfAllowed(): void {\n    if (!this.canToggle()) {\n      return;\n    }\n\n    this.value = this.uncheckable && this.btnRadio === this.value ? undefined : this.btnRadio;\n    this._onChange(this.value);\n  }\n\n  @HostListener('keydown.space', ['$event'])\n  onSpacePressed(event: KeyboardEvent) {\n    this.toggleIfAllowed();\n    event.preventDefault();\n  }\n\n  focus() {\n    this.el.nativeElement.focus();\n  }\n\n  @HostListener('focus')\n  onFocus() {\n    this._hasFocus = true;\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    this._hasFocus = false;\n    this.onTouched();\n  }\n\n  canToggle(): boolean {\n    return !this.controlOrGroupDisabled && (this.uncheckable || this.btnRadio !== this.value);\n  }\n\n  ngOnInit(): void {\n    this.uncheckable = typeof this.uncheckable !== 'undefined';\n  }\n\n  _onChange(value: string): void {\n    if (this.group) {\n      this.group.value = value;\n\n      return;\n    }\n    this.onTouched();\n    this.onChange(value);\n  }\n\n  // ControlValueAccessor\n  // model -> view\n  writeValue(value: string): void {\n    this.value = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: () => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    this._disabled = disabled;\n    if (disabled) {\n      this.renderer.setAttribute(this.el.nativeElement, 'disabled', 'disabled');\n\n      return;\n    }\n    this.renderer.removeAttribute(this.el.nativeElement, 'disabled');\n  }\n}\n","import {\n  ChangeDetectorRef,\n  ContentChildren,\n  Directive,\n  forwardRef,\n  HostBinding,\n  HostListener,\n  Provider,\n  QueryList\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ButtonRadioDirective } from './button-radio.directive';\n\nexport const RADIO_CONTROL_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable-next-line: no-use-before-declare */\n  useExisting: forwardRef(() => ButtonRadioGroupDirective),\n  multi: true\n};\n\n/**\n * A group of radio buttons.\n * A value of a selected button is bound to a variable specified via ngModel.\n */\n@Directive({\n  selector: '[btnRadioGroup]',\n  providers: [RADIO_CONTROL_VALUE_ACCESSOR]\n})\nexport class ButtonRadioGroupDirective implements ControlValueAccessor {\n  onChange = Function.prototype;\n  onTouched = Function.prototype;\n\n  @HostBinding('attr.role') readonly role: string = 'radiogroup';\n\n  @ContentChildren(forwardRef(() => ButtonRadioDirective))\n  radioButtons: QueryList<ButtonRadioDirective>;\n\n  get value() {\n    return this._value;\n  }\n  set value(value: string | null) {\n    this._value = value;\n    this.onChange(value);\n  }\n\n  private _value: string | null;\n\n  private _disabled: boolean;\n\n  @HostBinding('attr.tabindex')\n  get tabindex(): null | number {\n    if (this._disabled) {\n      return null;\n    } else {\n      return 0;\n    }\n  }\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  writeValue(value: string | null): void {\n    this._value = value;\n    this.cdr.markForCheck();\n  }\n\n  registerOnChange(fn: () => {}): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(disabled: boolean): void {\n    if (this.radioButtons) {\n      this._disabled = disabled;\n      this.radioButtons.forEach(buttons => {\n        buttons.setDisabledState(disabled);\n      });\n      this.cdr.markForCheck();\n    }\n  }\n\n  @HostListener('focus')\n  onFocus() {\n    if (this._disabled) {\n      return;\n    }\n    const activeRadio = this.getActiveOrFocusedRadio();\n    if (activeRadio) {\n      activeRadio.focus();\n    } else {\n      const firstEnabled = this.radioButtons.find(r => !r.disabled);\n      if (firstEnabled) {\n        firstEnabled.focus();\n      }\n    }\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    if (this.onTouched) {\n      this.onTouched();\n    }\n  }\n\n  @HostListener('keydown.ArrowRight', ['$event'])\n  @HostListener('keydown.ArrowDown', ['$event'])\n  selectNext(event: KeyboardEvent) {\n    this.selectInDirection('next');\n    event.preventDefault();\n  }\n\n  @HostListener('keydown.ArrowLeft', ['$event'])\n  @HostListener('keydown.ArrowUp', ['$event'])\n  selectPrevious(event: KeyboardEvent) {\n    this.selectInDirection('previous');\n    event.preventDefault();\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  private selectInDirection(direction: 'next' | 'previous') {\n    if (this._disabled) {\n      return;\n    }\n    function nextIndex(currentIndex: number, buttonRadioDirectives: ButtonRadioDirective[]) {\n      const step = direction === 'next' ? 1 : -1;\n      let calcIndex = (currentIndex + step) % buttonRadioDirectives.length;\n      if (calcIndex < 0) {\n        calcIndex = buttonRadioDirectives.length - 1;\n      }\n\n      return calcIndex;\n    }\n    const activeRadio = this.getActiveOrFocusedRadio();\n\n    if (activeRadio) {\n      const buttonRadioDirectives = this.radioButtons.toArray();\n      const currentActiveIndex = buttonRadioDirectives.indexOf(activeRadio);\n      for (\n        let i = nextIndex(currentActiveIndex, buttonRadioDirectives);\n        i !== currentActiveIndex;\n        i = nextIndex(i, buttonRadioDirectives)\n      ) {\n        if (buttonRadioDirectives[i].canToggle()) {\n          buttonRadioDirectives[i].toggleIfAllowed();\n          buttonRadioDirectives[i].focus();\n          break;\n        }\n      }\n    }\n  }\n\n  private getActiveOrFocusedRadio(): ButtonRadioDirective | undefined {\n    return this.radioButtons.find(button => button.isActive) || this.radioButtons.find(button => button.hasFocus);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ButtonCheckboxDirective } from './button-checkbox.directive';\nimport { ButtonRadioDirective } from './button-radio.directive';\nimport { ButtonRadioGroupDirective } from './button-radio-group.directive';\n\n@NgModule({\n  declarations: [ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective],\n  exports: [ButtonCheckboxDirective, ButtonRadioDirective, ButtonRadioGroupDirective]\n})\nexport class ButtonsModule {\n  static forRoot(): ModuleWithProviders<ButtonsModule> {\n    return { ngModule: ButtonsModule, providers: [] };\n  }\n}\n"]}