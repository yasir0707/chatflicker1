{"version":3,"file":"radio-group.directive.d.ts","sources":["radio-group.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterContentInit, OnDestroy, QueryList } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { MdbRadioDirective } from './radio-button.directive';\nexport declare const MDB_RADIO_GROUP_VALUE_ACCESSOR: any;\nexport declare class MdbRadioGroupDirective implements ControlValueAccessor, AfterContentInit, OnDestroy {\n    radios: QueryList<MdbRadioDirective>;\n    get value(): any;\n    set value(value: any);\n    private _value;\n    get name(): string;\n    set name(name: string);\n    private _name;\n    get disabled(): boolean;\n    set disabled(disabled: boolean);\n    private _disabled;\n    private _destroy$;\n    onChange: (_: any) => void;\n    onTouched: () => void;\n    ngAfterContentInit(): void;\n    ngOnDestroy(): void;\n    private _updateRadiosState;\n    private _updateNames;\n    private _updateChecked;\n    private _updateDisabled;\n    registerOnChange(fn: (value: any) => any): void;\n    registerOnTouched(fn: () => any): void;\n    setDisabledState(isDisabled: boolean): void;\n    writeValue(value: any): void;\n}\n"]}