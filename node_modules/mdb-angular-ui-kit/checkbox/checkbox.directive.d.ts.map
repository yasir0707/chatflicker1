{"version":3,"file":"checkbox.directive.d.ts","sources":["checkbox.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { BooleanInput } from '@angular/cdk/coercion';\nimport { EventEmitter } from '@angular/core';\nexport declare const MDB_CHECKBOX_VALUE_ACCESSOR: any;\nexport declare class MdbCheckboxChange {\n    element: MdbCheckboxDirective;\n    checked: boolean;\n}\nexport declare class MdbCheckboxDirective {\n    get checked(): boolean;\n    set checked(value: boolean);\n    private _checked;\n    get value(): any;\n    set value(value: any);\n    private _value;\n    get disabled(): boolean;\n    set disabled(value: boolean);\n    private _disabled;\n    checkboxChange: EventEmitter<MdbCheckboxChange>;\n    get isDisabled(): boolean;\n    get isChecked(): boolean;\n    onCheckboxClick(): void;\n    onBlur(): void;\n    constructor();\n    get changeEvent(): MdbCheckboxChange;\n    toggle(): void;\n    onCheckboxChange(): void;\n    onChange: (_: any) => void;\n    onTouched: () => void;\n    writeValue(value: any): void;\n    registerOnChange(fn: (_: any) => void): void;\n    registerOnTouched(fn: () => void): void;\n    setDisabledState(isDisabled: boolean): void;\n    static ngAcceptInputType_checked: BooleanInput;\n    static ngAcceptInputType_disabled: BooleanInput;\n}\n"]}