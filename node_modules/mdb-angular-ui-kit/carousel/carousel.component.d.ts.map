{"version":3,"file":"carousel.component.d.ts","sources":["carousel.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { BooleanInput } from '@angular/cdk/coercion';\nimport { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy, QueryList } from '@angular/core';\nimport { MdbCarouselItemComponent } from './carousel-item.component';\nexport declare enum Direction {\n    UNKNOWN = 0,\n    NEXT = 1,\n    PREV = 2\n}\nexport declare class MdbCarouselComponent implements AfterViewInit, OnDestroy {\n    private _elementRef;\n    private _cdRef;\n    _items: QueryList<MdbCarouselItemComponent>;\n    get items(): MdbCarouselItemComponent[];\n    animation: 'slide' | 'fade';\n    get controls(): boolean;\n    set controls(value: boolean);\n    private _controls;\n    get dark(): boolean;\n    set dark(value: boolean);\n    private _dark;\n    get indicators(): boolean;\n    set indicators(value: boolean);\n    private _indicators;\n    get ride(): boolean;\n    set ride(value: boolean);\n    private _ride;\n    get interval(): number;\n    set interval(value: number);\n    private _interval;\n    keyboard: boolean;\n    pause: boolean;\n    wrap: boolean;\n    slide: EventEmitter<void>;\n    slideChange: EventEmitter<void>;\n    get activeSlide(): number;\n    set activeSlide(index: number);\n    private _activeSlide;\n    private _lastInterval;\n    private _isPlaying;\n    private _isSliding;\n    private readonly _destroy$;\n    onMouseEnter(): void;\n    onMouseLeave(): void;\n    constructor(_elementRef: ElementRef, _cdRef: ChangeDetectorRef);\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    private _setActiveSlide;\n    private _restartInterval;\n    private _resetInterval;\n    play(): void;\n    stop(): void;\n    to(index: number): void;\n    next(): void;\n    prev(): void;\n    private _slide;\n    private _animateSlides;\n    private _reflow;\n    private _emulateTransitionEnd;\n    private _getNewSlideIndex;\n    private _getNextSlideIndex;\n    private _getPrevSlideIndex;\n    static ngAcceptInputType_controls: BooleanInput;\n    static ngAcceptInputType_dark: BooleanInput;\n    static ngAcceptInputType_indicators: BooleanInput;\n    static ngAcceptInputType_ride: BooleanInput;\n}\n"]}