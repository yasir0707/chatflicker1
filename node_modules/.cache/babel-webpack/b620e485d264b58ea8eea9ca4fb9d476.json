{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FileUploader } from 'ng2-file-upload';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\"; // import Map  from 'typescript';\n\nexport let ChatService = /*#__PURE__*/(() => {\n  class ChatService {\n    constructor(http) {\n      this.http = http;\n      this.BaseUrl = `http://localhost:3000/chat/`;\n      this.str = localStorage.getItem('email');\n      this.u_str = localStorage.getItem('useremail');\n      this.isUser = new BehaviorSubject(false);\n      this.headerDict = {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Access-Control-Allow-Headers': 'Content-Type'\n      };\n      this.requestOptions = {\n        headers: new Headers(this.headerDict)\n      };\n      this.uploader = new FileUploader({\n        url: this.BaseUrl,\n        removeAfterUpload: false,\n        autoUpload: true\n      });\n    }\n\n    PostUser(chat) {\n      console.log(\"chat\", chat);\n      return this.http.post(this.BaseUrl, chat, {\n        headers: this.headerDict\n      }).pipe(map(res => res.data.values));\n    }\n\n    getChat() {\n      return this.http.get(this.BaseUrl);\n    }\n\n    getAdminChat() {\n      return this.http.get(this.BaseUrl + `${this.str}`);\n    }\n\n    getUserChat() {\n      return this.http.get(this.BaseUrl + `user/${this.str}/${this.u_str}`);\n    }\n\n    PostStatus(data, id) {\n      return this.http.post(this.BaseUrl + `status/${id}`, data);\n    }\n\n    PostUserStatus(data, id) {\n      return this.http.post(this.BaseUrl + `userstatus/${id}`, data);\n    }\n\n    DeleteChat(id) {\n      return this.http.delete(this.BaseUrl + `delete/${id}`);\n    }\n\n    Chat(user) {\n      this.msg = user;\n      return user;\n    }\n\n  }\n\n  ChatService.ɵfac = function ChatService_Factory(t) {\n    return new (t || ChatService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ChatService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ChatService,\n    factory: ChatService.ɵfac,\n    providedIn: 'root'\n  });\n  return ChatService;\n})();","map":null,"metadata":{},"sourceType":"module"}