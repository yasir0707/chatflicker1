{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"angular-bootstrap-md\";\nexport let AdmingraphComponent = /*#__PURE__*/(() => {\n  class AdmingraphComponent {\n    constructor() {\n      this.chartType = 'line';\n      this.chartType1 = 'line';\n      this.chartDatasets = [{\n        data: [65, 59, 80, 81, 56, 55, 40],\n        label: 'My First dataset'\n      }, {\n        data: [28, 48, 40, 19, 86, 27, 90],\n        label: 'My Second dataset'\n      }];\n      this.chartDatasets1 = [{\n        data: [65, 59, 80, 81, 56, 55, 40],\n        label: 'My First dataset'\n      }];\n      this.chartLabels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n      this.chartLabels1 = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n      this.chartColors = [{\n        backgroundColor: 'rgba(105, 0, 132, .2)',\n        borderColor: 'rgba(200, 99, 132, .7)',\n        borderWidth: 2\n      }, {\n        backgroundColor: 'rgba(0, 137, 132, .2)',\n        borderColor: 'rgba(0, 10, 130, .7)',\n        borderWidth: 2\n      }];\n      this.chartColors1 = [{\n        backgroundColor: 'rgba(105, 0, 132, .2)',\n        borderColor: 'rgba(200, 99, 132, .7)',\n        borderWidth: 2\n      }];\n      this.chartOptions = {\n        responsive: true\n      };\n      this.chartOptions1 = {\n        responsive: true\n      };\n    }\n\n    ngOnInit() {}\n\n    chartClicked(e) {}\n\n    chartHovered(e) {}\n\n  }\n\n  AdmingraphComponent.ɵfac = function AdmingraphComponent_Factory(t) {\n    return new (t || AdmingraphComponent)();\n  };\n\n  AdmingraphComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdmingraphComponent,\n    selectors: [[\"app-admingraph\"]],\n    decls: 3,\n    vars: 12,\n    consts: [[2, \"display\", \"block\"], [\"mdbChart\", \"\", 3, \"chartType\", \"datasets\", \"labels\", \"colors\", \"options\", \"legend\", \"chartHover\", \"chartClick\"]],\n    template: function AdmingraphComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"canvas\", 1);\n        i0.ɵɵlistener(\"chartHover\", function AdmingraphComponent_Template_canvas_chartHover_1_listener($event) {\n          return ctx.chartHovered($event);\n        })(\"chartClick\", function AdmingraphComponent_Template_canvas_chartClick_1_listener($event) {\n          return ctx.chartClicked($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"canvas\", 1);\n        i0.ɵɵlistener(\"chartHover\", function AdmingraphComponent_Template_canvas_chartHover_2_listener($event) {\n          return ctx.chartHovered($event);\n        })(\"chartClick\", function AdmingraphComponent_Template_canvas_chartClick_2_listener($event) {\n          return ctx.chartClicked($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"chartType\", ctx.chartType)(\"datasets\", ctx.chartDatasets)(\"labels\", ctx.chartLabels)(\"colors\", ctx.chartColors)(\"options\", ctx.chartOptions)(\"legend\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"chartType\", ctx.chartType1)(\"datasets\", ctx.chartDatasets1)(\"labels\", ctx.chartLabels1)(\"colors\", ctx.chartColors1)(\"options\", ctx.chartOptions1)(\"legend\", true);\n      }\n    },\n    directives: [i1.BaseChartDirective],\n    styles: [\"\"]\n  });\n  return AdmingraphComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}